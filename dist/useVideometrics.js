import{useState as e,useCallback as t,useMemo as i,useEffect as s}from"react";function n(e,t,i,s){Object.defineProperty(e,t,{get:i,set:s,enumerable:!0,configurable:!0})}var o,a={};o=a,Object.defineProperty(o,"__esModule",{value:!0,configurable:!0}),n(a,"defaultConfig",(()=>r)),n(a,"default",(()=>c));const r=Object.assign({videoEvents:["play","pause","seeked","ended"],windowEvents:["visibilitychange"],serialize:JSON.stringify,captureDefault:(e,t)=>({at:t.videoElement.currentTime}),"capture-visibilitychange":(e,t)=>{switch(document.visibilityState){case"hidden":return{at:t.videoElement.currentTime,type:"hide"};case"visible":return{at:t.videoElement.currentTime,type:"show"};default:return{skip:!0}}},bulkSize:100,interval:864e5,customData:{}},process.env.VIDEO_METRICS_CONFIG&&JSON.parse(process.env.VIDEO_METRICS_CONFIG));class c{constructor(e,t){this.videoElement=e,this._originalConfig=t,this.config=t,this.attachedVideoEvents=new Set,this.attachedWindowEvents=new Set,this.running=!1,this._processEvent=this.processEvent.bind(this),this.start()}set config(e){this.mergedConfig=Object.assign({},r,e)}get config(){return this._originalConfig}attachEvent(e,t,i){i.has(e)||(t.addEventListener(e,this._processEvent),i.add(e))}detachEvent(e,t,i){i.has(e)&&(t.removeEventListener(e,this._processEvent),i.delete(e))}processEvent(e){const t=this.mergedConfig[`capture-${e.type}`]?this.mergedConfig[`capture-${e.type}`](e,this):this.mergedConfig.captureDefault(e,this);if(t.skip)return;const i=parseInt(localStorage.getItem("videometrics-last-index"))||0,s=parseInt(localStorage.getItem("videometrics-last-send"))||Date.now(),n=JSON.stringify({...this.mergedConfig.customData,when:Date.now(),type:e.type,...t});localStorage.getItem("videometrics-"+(i-1))!==n&&(localStorage.setItem("videometrics-last-index",i+1),localStorage.setItem(`videometrics-${i}`,n),(i>this.mergedConfig.bulkSize||s+this.mergedConfig.interval<Date.now())&&this.bulk(n))}async bulk(){const e=this.mergedConfig.firstRow?[this.mergedConfig.firstRow]:[];let t=parseIndex(localStorage.getItem("videometrics-last-index"))||0;if(0!==t){for(;t--;)e.push(localStorage.getItem(`videometrics-${t}`));if(e.push(newItem),await this.mergedConfig.send(this,e))for(localStorage.setItem("videometrics-last-index",0),localStorage.setItem("videometrics-last-send",Date.now());t--;)localStorage.removeItem(`videometrics-${t}`)}else localStorage.setItem("videometrics-last-send",Date.now())}start(){this.running||(this.mergedConfig.videoEvents.forEach((e=>this.attachEvent(e,this.videoElement,this.attachedVideoEvents))),this.mergedConfig.windowEvents.forEach((e=>this.attachEvent(e,window,this.attachedWindowEvents))),this.running=!0)}stop(){this.attachedVideoEvents.forEach((e=>this.videoElement.removeEventListener(e,this._processEvent))),this.attachedWindowEvents.forEach((e=>this.window.removeEventListener(e,this._processEvent))),this.attachedVideoEvents.clear(),this.attachedWindowEvents.clear(),this.running=!1}}function d(n,o=null){const[a,r]=e(o),d=t((e=>{null!==e&&r(e)}),[]);console.log("refresh",a,n);const l=i((()=>a&&new c(a,n)),[a,n]);s((()=>()=>l&&l.stop()),[l]);const h=[d,l,r];return h.videoRef=d,h.instance=l,h.setVideoElement=r,h}export{d as default};